name: CI - Build, Test, SonarCloud

on:
  push:
    branches:
      '**'

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build, Test & SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Instalar .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: 📥 Instalar SonarScanner e dotnet-coverage
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage

      - name: 🔧 Configurar PATH para Ferramentas Globais
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: 🚀 Restaurar dependências
        run: dotnet restore Postech.Fiap.Orders.sln

      - name: 🔨 Compilar solução
        run: dotnet build Postech.Fiap.Orders.sln --configuration Release --no-restore

      - name: 🧪 Rodar testes e coletar cobertura com dotnet-coverage
        run: |
          dotnet sonarscanner begin \
            /k:"themisterbondy_postech-tech-challenge-api-orders" \
            /o:"themisterbondy" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"

          dotnet build Postech.Fiap.Orders.sln --configuration Release --no-restore

          dotnet-coverage collect "dotnet test test/Postech.Fiap.Orders.WepApi.UnitTests --configuration Release" \
            -f xml -o "coverage.xml"

          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: 🚦 Verificar qualidade do código no SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectKey: "themisterbondy_postech-fiap-orders"
          organization: "themisterbondy"                  