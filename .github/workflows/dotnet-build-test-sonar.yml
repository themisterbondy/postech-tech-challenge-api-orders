name: CI - Build, Test, SonarCloud

on:
  push:
    branches:
      '**'

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build, Test & SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Instalar .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: 📥 Instalar SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: 🔧 Configurar PATH para SonarScanner
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: 🚀 Restaurar dependências
        run: dotnet restore Postech.Fiap.Orders.sln

      - name: 🔨 Compilar solução
        run: dotnet build Postech.Fiap.Orders.sln --configuration Release --no-restore

      - name: 🧪 Rodar testes com cobertura
        run: |
          dotnet test test/Postech.Fiap.Orders.WepApi.UnitTests \
            --configuration Release \
            --no-restore \
            --logger trx \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults

      - name: 📊 Converter cobertura para formato SonarCloud
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator \
            -reports:TestResults/*/coverage.cobertura.xml \
            -targetdir:TestResults/CoverageReport \
            -reporttypes:Cobertura

      - name: 📡 Rodar SonarCloud Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"themisterbondy_postech-fiap-orders" \
            /o:"themisterbondy" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.coverageReportPaths="TestResults/CoverageReport/Cobertura.xml"

          dotnet build Postech.Fiap.Orders.sln --configuration Release --no-restore

          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"